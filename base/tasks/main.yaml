---
- name: apt update/upgrade
  become: yes
  apt:
    autoclean: yes
    autoremove: yes
    cache_valid_time: 3600
    update_cache: yes
    upgrade: safe
- name: apt install common packages
  become: yes
  apt:
    name: "{{ apt.packages }}"
    state: latest

- name: generate ssh key pair
  shell: |
    ssh-keygen -q -t ed25519 -N "" -C "${USER}@$(uname -nr)" -f ~/.ssh/id_ed25519
  args:
    creates: ~/.ssh/id_ed25519
- name: generate API body
  shell: |
    echo "{\"title\":\"$(uname -nr)\", \"key\":\"$(cat ~/.ssh/id_ed25519.pub)\"}"
  register: api_body
- name: register ssh public key to github.com
  uri:
    body: "{{ api_body.stdout }}"
    body_format: json
    headers:
      Accept: "application/vnd.github.v3+json"
      Authorization: "token {{ secrets.github_token }}"
    method: POST
    status_code: 201,422
    url: https://api.github.com/user/keys
- name: register ssh public key to gitlab.com
  uri:
    body: "{{ api_body.stdout }}"
    body_format: json
    headers:
      Private-Token: "{{ secrets.gitlab_token }}"
    method: POST
    status_code: 201,400
    url: https://gitlab.com/api/v4/user/keys
- name: ensure github.com is a known host
  known_hosts:
    name: "{{ item }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -H ' + item) }}"
    hash_host: yes
  with_items:
    - "{{ known_hosts.domains }}"

- name: clone epaew/dotfiles.git
  git:
    repo: git@github.com:epaew/dotfiles.git  
    dest: "{{ dirs.dotfiles }}"
- name: create symlink of each dotfiles
  file:
    src: "{{ dirs.dotfiles }}/{{ item }}"
    dest: "{{ dirs.home }}/{{ item }}"
    state: link
  with_items: "{{ dotfiles.links }}"
- name: create copy of each dotfiles
  copy:
    src: "{{ dirs.dotfiles }}/{{ item }}"
    dest: "{{ dirs.home }}/{{ item }}"
    remote_src: yes
  with_items: "{{ dotfiles.copies }}"

- name: mkdir for fzf
  file:
    path: "{{ dirs.fzf }}"
    state: directory
- name: clone junegunn/fzf.git
  git:
    repo: git@github.com:junegunn/fzf.git
    dest: "{{ dirs.fzf }}"
- name: install fzf
  shell: "{{ dirs.fzf }}/install"
  args:
    creates: "{{ dirs.fzf }}/bin/fzf"

- name: set bell style none
  copy:
    dest: ~/.inputrc
    content: "set bell-style none"
- name: set global git user name
  git_config:
    name: user.name
    scope: global
    value: epaew
- name: set global git user email
  git_config:
    name: user.email
    scope: global
    value: epaew.333@gmail.com
