---
- name: git clone nodenv
  git:
    dest: "{{ nodenv_root }}"
    depth: 1
    repo: "{{ nodenv_reposiory.url }}"
    version: "{{ nodenv_reposiory.branch }}"
- name: compile nodenv
  shell: src/configure && make -C src
  args:
    chdir: "{{ nodenv_root }}"
- name: mkdir ~/.nodenv/plugins
  file:
    path: "{{ nodenv_root }}/plugins"
    state: directory
- name: git clone nodenv plugins
  git:
    dest: "{{ nodenv_root }}/plugins/{{ item.name }}"
    depth: 1
    repo: "{{ item.repository.url }}"
    version: "{{ item.repository.branch }}"
  with_items:
      - "{{ nodenv_required_plugins }}"
      - "{{ nodenv_extra_plugins }}"
- name: replace ~/.nodenv/default-packages
  template:
    src: nodenv/default-packages.j2
    dest: "{{ nodenv_root }}/default-packages"

- name: nodenv install global
  shell: |
    eval "$(nodenv init -)"
    nodenv install {{ default_node_version }}
    nodenv global {{ default_node_version }}
  args:
    creates: "{{ nodenv_root }}/versions/{{ default_node_version }}"
  environment:
    PATH: "{{ nodenv_root }}/bin:{{ ansible_env.PATH }}"
  when:
    - default_node_version is defined
    - default_node_version|length > 0

- name: nodenv install extra
  shell: |
    eval "$(nodenv init -)"
    nodenv install {{ item }}
  args:
    creates: "{{ nodenv_root }}/versions/{{ item }}"
  environment:
    PATH: "{{ nodenv_root }}/bin:{{ ansible_env.PATH }}"
  with_items:
    - "{{ extra_node_versions }}"
