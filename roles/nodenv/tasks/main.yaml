---
- name: git clone nodenv
  git:
    dest: "{{ nodenv_root }}"
    depth: "{{ nodenv_reposiory.depth }}"
    repo: "{{ nodenv_reposiory.url }}"
- name: compile nodenv
  shell: src/configure && make -C src
  args:
    chdir: "{{ nodenv_root }}"
- name: mkdir ~/.nodenv/plugins
  file:
    path: "{{ nodenv_root }}/plugins"
    state: directory
- name: git clone node-build
  git:
    dest: "{{ nodenv_root }}/plugins/node-build"
    depth: "{{ node_build_repository.depth }}"
    repo: "{{ node_build_repository.url }}"
- name: git clone extra nodenv plugins
  git:
    dest: "{{ nodenv_root }}/plugins/{{ item.name }}"
    depth: "{{ item.repository.depth }}"
    repo: "{{ item.repository.url }}"
  with_items:
      - "{{ nodenv_plugins }}"

- name: nodenv install global
  shell: |
    eval "$(nodenv init -)"
    nodenv install {{ default_node_version }}
    nodenv global {{ default_node_version }}
  args:
    creates: "{{ nodenv_root }}/versions/{{ default_node_version }}"
  environment:
    PATH: "{{ nodenv_root }}/bin:{{ ansible_env.PATH }}"
  when:
    - default_node_version is defined
    - default_node_version|length > 0

- name: nodenv install extra
  shell: |
    eval "$(nodenv init -)"
    nodenv install {{ item }}
  args:
    creates: "{{ nodenv_root }}/versions/{{ item }}"
  environment:
    PATH: "{{ nodenv_root }}/bin:{{ ansible_env.PATH }}"
  with_items:
    - "{{ extra_node_versions }}"
